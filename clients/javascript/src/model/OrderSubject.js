/**
 * NatCrim Service Integration
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1.3.7
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import Dob from './Dob';
import MiddleName from './MiddleName';

/**
 * The OrderSubject model module.
 * @module model/OrderSubject
 * @version 1.0.0
 */
class OrderSubject {
    /**
     * Constructs a new <code>OrderSubject</code>.
     * @alias module:model/OrderSubject
     * @param firstName {Object} 
     * @param lastName {Object} 
     */
    constructor(firstName, lastName) { 
        
        OrderSubject.initialize(this, firstName, lastName);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, firstName, lastName) { 
        obj['first_name'] = firstName;
        obj['last_name'] = lastName;
    }

    /**
     * Constructs a <code>OrderSubject</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/OrderSubject} obj Optional instance to populate.
     * @return {module:model/OrderSubject} The populated <code>OrderSubject</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new OrderSubject();

            if (data.hasOwnProperty('first_name')) {
                obj['first_name'] = ApiClient.convertToType(data['first_name'], Object);
            }
            if (data.hasOwnProperty('middle_name')) {
                obj['middle_name'] = MiddleName.constructFromObject(data['middle_name']);
            }
            if (data.hasOwnProperty('last_name')) {
                obj['last_name'] = ApiClient.convertToType(data['last_name'], Object);
            }
            if (data.hasOwnProperty('dob')) {
                obj['dob'] = Dob.constructFromObject(data['dob']);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>OrderSubject</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>OrderSubject</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of OrderSubject.RequiredProperties) {
            if (!data[property]) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // validate the optional field `middle_name`
        if (data['middle_name']) { // data not null
          MiddleName.validateJSON(data['middle_name']);
        }
        // validate the optional field `dob`
        if (data['dob']) { // data not null
          Dob.validateJSON(data['dob']);
        }

        return true;
    }


}

OrderSubject.RequiredProperties = ["first_name", "last_name"];

/**
 * @member {Object} first_name
 */
OrderSubject.prototype['first_name'] = undefined;

/**
 * @member {module:model/MiddleName} middle_name
 */
OrderSubject.prototype['middle_name'] = undefined;

/**
 * @member {Object} last_name
 */
OrderSubject.prototype['last_name'] = undefined;

/**
 * @member {module:model/Dob} dob
 */
OrderSubject.prototype['dob'] = undefined;






export default OrderSubject;

