/**
 * NatCrim Service Integration
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1.3.7
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import DefaultProfile from './DefaultProfile';

/**
 * The SubAccount model module.
 * @module model/SubAccount
 * @version 1.0.0
 */
class SubAccount {
    /**
     * Constructs a new <code>SubAccount</code>.
     * @alias module:model/SubAccount
     * @param id {Object} 
     * @param name {Object} Descriptive name of sub-account
     * @param email {Object} Email address. Also functions as a username if a password is set
     * @param defaultProfile {module:model/DefaultProfile} 
     * @param isDeleted {Object} 
     */
    constructor(id, name, email, defaultProfile, isDeleted) { 
        
        SubAccount.initialize(this, id, name, email, defaultProfile, isDeleted);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, id, name, email, defaultProfile, isDeleted) { 
        obj['id'] = id;
        obj['name'] = name;
        obj['email'] = email;
        obj['default_profile'] = defaultProfile;
        obj['is_deleted'] = isDeleted;
    }

    /**
     * Constructs a <code>SubAccount</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/SubAccount} obj Optional instance to populate.
     * @return {module:model/SubAccount} The populated <code>SubAccount</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new SubAccount();

            if (data.hasOwnProperty('id')) {
                obj['id'] = ApiClient.convertToType(data['id'], Object);
            }
            if (data.hasOwnProperty('name')) {
                obj['name'] = ApiClient.convertToType(data['name'], Object);
            }
            if (data.hasOwnProperty('email')) {
                obj['email'] = ApiClient.convertToType(data['email'], Object);
            }
            if (data.hasOwnProperty('default_profile')) {
                obj['default_profile'] = DefaultProfile.constructFromObject(data['default_profile']);
            }
            if (data.hasOwnProperty('is_deleted')) {
                obj['is_deleted'] = ApiClient.convertToType(data['is_deleted'], Object);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>SubAccount</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>SubAccount</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of SubAccount.RequiredProperties) {
            if (!data[property]) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // validate the optional field `default_profile`
        if (data['default_profile']) { // data not null
          DefaultProfile.validateJSON(data['default_profile']);
        }

        return true;
    }


}

SubAccount.RequiredProperties = ["id", "name", "email", "default_profile", "is_deleted"];

/**
 * @member {Object} id
 */
SubAccount.prototype['id'] = undefined;

/**
 * Descriptive name of sub-account
 * @member {Object} name
 */
SubAccount.prototype['name'] = undefined;

/**
 * Email address. Also functions as a username if a password is set
 * @member {Object} email
 */
SubAccount.prototype['email'] = undefined;

/**
 * @member {module:model/DefaultProfile} default_profile
 */
SubAccount.prototype['default_profile'] = undefined;

/**
 * @member {Object} is_deleted
 */
SubAccount.prototype['is_deleted'] = undefined;






export default SubAccount;

