/**
 * NatCrim Service Integration
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1.3.7
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import ClientReference from './ClientReference';
import Fips from './Fips';
import MaxResults1 from './MaxResults1';
import OrderRequestPostProfileDef from './OrderRequestPostProfileDef';
import OrderSubject from './OrderSubject';
import ProfileId1 from './ProfileId1';
import Region from './Region';

/**
 * The OrderRequestPost model module.
 * @module model/OrderRequestPost
 * @version 1.0.0
 */
class OrderRequestPost {
    /**
     * Constructs a new <code>OrderRequestPost</code>.
     * @alias module:model/OrderRequestPost
     * @param subject {module:model/OrderSubject} 
     */
    constructor(subject) { 
        
        OrderRequestPost.initialize(this, subject);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, subject) { 
        obj['subject'] = subject;
    }

    /**
     * Constructs a <code>OrderRequestPost</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/OrderRequestPost} obj Optional instance to populate.
     * @return {module:model/OrderRequestPost} The populated <code>OrderRequestPost</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new OrderRequestPost();

            if (data.hasOwnProperty('client_reference')) {
                obj['client_reference'] = ClientReference.constructFromObject(data['client_reference']);
            }
            if (data.hasOwnProperty('profile_id')) {
                obj['profile_id'] = ProfileId1.constructFromObject(data['profile_id']);
            }
            if (data.hasOwnProperty('profile_def')) {
                obj['profile_def'] = OrderRequestPostProfileDef.constructFromObject(data['profile_def']);
            }
            if (data.hasOwnProperty('fips')) {
                obj['fips'] = Fips.constructFromObject(data['fips']);
            }
            if (data.hasOwnProperty('region')) {
                obj['region'] = Region.constructFromObject(data['region']);
            }
            if (data.hasOwnProperty('subject')) {
                obj['subject'] = OrderSubject.constructFromObject(data['subject']);
            }
            if (data.hasOwnProperty('max_results')) {
                obj['max_results'] = MaxResults1.constructFromObject(data['max_results']);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>OrderRequestPost</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>OrderRequestPost</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of OrderRequestPost.RequiredProperties) {
            if (!data[property]) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // validate the optional field `client_reference`
        if (data['client_reference']) { // data not null
          ClientReference.validateJSON(data['client_reference']);
        }
        // validate the optional field `profile_id`
        if (data['profile_id']) { // data not null
          ProfileId1.validateJSON(data['profile_id']);
        }
        // validate the optional field `profile_def`
        if (data['profile_def']) { // data not null
          OrderRequestPostProfileDef.validateJSON(data['profile_def']);
        }
        // validate the optional field `fips`
        if (data['fips']) { // data not null
          Fips.validateJSON(data['fips']);
        }
        // validate the optional field `region`
        if (data['region']) { // data not null
          Region.validateJSON(data['region']);
        }
        // validate the optional field `subject`
        if (data['subject']) { // data not null
          OrderSubject.validateJSON(data['subject']);
        }
        // validate the optional field `max_results`
        if (data['max_results']) { // data not null
          MaxResults1.validateJSON(data['max_results']);
        }

        return true;
    }


}

OrderRequestPost.RequiredProperties = ["subject"];

/**
 * @member {module:model/ClientReference} client_reference
 */
OrderRequestPost.prototype['client_reference'] = undefined;

/**
 * @member {module:model/ProfileId1} profile_id
 */
OrderRequestPost.prototype['profile_id'] = undefined;

/**
 * @member {module:model/OrderRequestPostProfileDef} profile_def
 */
OrderRequestPost.prototype['profile_def'] = undefined;

/**
 * @member {module:model/Fips} fips
 */
OrderRequestPost.prototype['fips'] = undefined;

/**
 * @member {module:model/Region} region
 */
OrderRequestPost.prototype['region'] = undefined;

/**
 * @member {module:model/OrderSubject} subject
 */
OrderRequestPost.prototype['subject'] = undefined;

/**
 * @member {module:model/MaxResults1} max_results
 */
OrderRequestPost.prototype['max_results'] = undefined;






export default OrderRequestPost;

