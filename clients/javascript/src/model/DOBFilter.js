/**
 * NatCrim Service Integration
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1.3.7
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The DOBFilter model module.
 * @module model/DOBFilter
 * @version 1.0.0
 */
class DOBFilter {
    /**
     * Constructs a new <code>DOBFilter</code>.
     * @alias module:model/DOBFilter
     */
    constructor() { 
        
        DOBFilter.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>DOBFilter</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/DOBFilter} obj Optional instance to populate.
     * @return {module:model/DOBFilter} The populated <code>DOBFilter</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new DOBFilter();

            if (data.hasOwnProperty('allow_off_by_one')) {
                obj['allow_off_by_one'] = ApiClient.convertToType(data['allow_off_by_one'], 'Boolean');
            }
            if (data.hasOwnProperty('allow_empty_dob')) {
                obj['allow_empty_dob'] = ApiClient.convertToType(data['allow_empty_dob'], 'Boolean');
            }
            if (data.hasOwnProperty('minimum_components_matched')) {
                obj['minimum_components_matched'] = ApiClient.convertToType(data['minimum_components_matched'], 'Number');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>DOBFilter</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>DOBFilter</code>.
     */
    static validateJSON(data) {

        return true;
    }


}



/**
 * Allow any one part of the DOB: month, day, year, to be different by no more than 1.
 * @member {Boolean} allow_off_by_one
 * @default false
 */
DOBFilter.prototype['allow_off_by_one'] = false;

/**
 * Match records with no DOB
 * @member {Boolean} allow_empty_dob
 * @default false
 */
DOBFilter.prototype['allow_empty_dob'] = false;

/**
 * How many of the parts of the DOB must match the searched DOB
 * @member {Number} minimum_components_matched
 * @default 3
 */
DOBFilter.prototype['minimum_components_matched'] = 3;






export default DOBFilter;

