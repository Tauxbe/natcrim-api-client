# coding: utf-8

"""
    NatCrim Service Integration

    No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

    The version of the OpenAPI document: v1.3.7
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest
import datetime

from natcrim_api_client.models.order_request_get import OrderRequestGet

class TestOrderRequestGet(unittest.TestCase):
    """OrderRequestGet unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> OrderRequestGet:
        """Test OrderRequestGet
            include_option is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `OrderRequestGet`
        """
        model = OrderRequestGet()
        if include_optional:
            return OrderRequestGet(
                client_reference = None,
                profile_id = None,
                profile_def = natcrim_api_client.models.profile_definition_get.ProfileDefinitionGet(
                    tag = null, 
                    first_name = natcrim_api_client.models.name_filter_get.NameFilterGet(
                        match_required = True, 
                        match_first_letters = 56, 
                        match_begins_with = True, 
                        match_full_name = True, ), 
                    middle_name = natcrim_api_client.models.name_filter_get.NameFilterGet(
                        match_required = True, 
                        match_first_letters = 56, 
                        match_begins_with = True, 
                        match_full_name = True, ), 
                    last_name = , 
                    dob = natcrim_api_client.models.dob_filter_get.DOBFilterGet(
                        allow_off_by_one = True, 
                        allow_empty_dob = True, 
                        minimum_components_matched = 0.0, ), 
                    source_types = null, 
                    max_age = null, ),
                fips = None,
                region = None,
                subject = natcrim_api_client.models.order_subject.OrderSubject(
                    first_name = null, 
                    middle_name = null, 
                    last_name = null, 
                    dob = null, ),
                max_results = None
            )
        else:
            return OrderRequestGet(
                client_reference = None,
                profile_id = None,
                profile_def = natcrim_api_client.models.profile_definition_get.ProfileDefinitionGet(
                    tag = null, 
                    first_name = natcrim_api_client.models.name_filter_get.NameFilterGet(
                        match_required = True, 
                        match_first_letters = 56, 
                        match_begins_with = True, 
                        match_full_name = True, ), 
                    middle_name = natcrim_api_client.models.name_filter_get.NameFilterGet(
                        match_required = True, 
                        match_first_letters = 56, 
                        match_begins_with = True, 
                        match_full_name = True, ), 
                    last_name = , 
                    dob = natcrim_api_client.models.dob_filter_get.DOBFilterGet(
                        allow_off_by_one = True, 
                        allow_empty_dob = True, 
                        minimum_components_matched = 0.0, ), 
                    source_types = null, 
                    max_age = null, ),
                subject = natcrim_api_client.models.order_subject.OrderSubject(
                    first_name = null, 
                    middle_name = null, 
                    last_name = null, 
                    dob = null, ),
        )
        """

    def testOrderRequestGet(self):
        """Test OrderRequestGet"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
